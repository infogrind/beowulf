<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ch.hotstuff</groupId>
		<artifactId>beowulf-masterbuild</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../beowulf-masterbuild/pom.xml</relativePath>
	</parent>
	<artifactId>beowulf-ws-testclient</artifactId>
	<packaging>war</packaging>
	
	<properties>
		<webapp.path>/wsclient</webapp.path>
	</properties>

	<name>Experimental Servlet WebApp</name>
	<description>
	This is a webapp with a servlet that manually initiates a spring context. 
	Logging is used to display when exactly what is loaded.
	The goal is to see whether only a singleton instance of the web service proxy is returned by the proxy factory. 
	
	To use:
	  0. Make sure the web service (from beowulf-webservice-app) runs at http://localhost:8443/webservice/HelloWorld
	  1. mvn tomcat:run
	  2. Access http://localhost:12345/wsclient/wsclientservlet
	</description>
	<url>http://maven.apache.org</url>
	
	<profiles>
		<profile>
			<id>log4j</id>
			<dependencies>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
					<scope>runtime</scope>
		        </dependency>
			</dependencies>
		</profile>
		<profile>
			<id>logback</id>
			<dependencies>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	
	<dependencies>
		<!-- Web service provider -->
		<dependency>
			<groupId>ch.hotstuff</groupId>
			<artifactId>beowulf-business-svc</artifactId>
			<scope>compile</scope>
		</dependency>
	
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		
		<!-- CXF to access web service -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
		</dependency>
		
		<!-- To use servlet related classes -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>beowulf-ws-testclient</finalName>
		<resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-test-resources</phase>
						<configuration>
							<portNames>
								<portName>test.server.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- This says: Run the "run-war" goal of the tomcat plugin in the 
							build phase "pre-integration-test". -->
						<id>start-tomcat</id>
						<goals>
							<goal>run-war</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<port>${test.server.port}</port>
							<path>${webapp.path}</path>
							<fork>true</fork>
							<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
						</configuration>
					</execution>
					<execution>
						<!-- This says: Run the "shutdown" goal of the tomcat plugin in the 
							build phase "post-integration-test". -->
						<id>stop-tomcat</id>
						<goals>
							<goal>shutdown</goal>
						</goals>
						<phase>post-integration-test</phase>
						<configuration>
							<path>${webapp.path}</path>
						</configuration>
					</execution>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<port>12345</port>
							<path>${webapp.path}</path>
							<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<webapp.url>http://localhost:${test.server.port}${webapp.path}${ping.test.path}</webapp.url>
								<db.url>jdbc://to.be.defined</db.url>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>
												reserve-network-port
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
