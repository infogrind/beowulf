<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<bean id="someBean" class="ch.hotstuff.beowulf.wsclient.util.impl.SomeBeanImpl">
		<property name="name" value="Katzeklo" />
	</bean>

	<!-- This factory is not performing, since it creates a new web service instance upon every
		 call, which is costly.
	-->
	<!-- <bean id="webService_proxyFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean"> 
		<property name="serviceClass" value="ch.hotstuff.beowulf.services.HelloWorld" 
		/> <property name="address" value="http://localhost:8443/webservice/HelloWorld" 
		/> </bean>	
	-->

	<!-- This bean implements the FactoryBean. This means that every reference to it
	     produces an object obtained by calling getObject() on this bean, rather than
	     the factory bean itself. To refer to the instance of the factory bean, precede the
	     bean name by an ampersand. In the XML configuration, the ampersand must be written
	     as &amp; . (See below, how the bean helloService_portProxy refers to the proxy factory.
	-->
	<bean id="helloService_portProxyFactory"
		class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean" scope="prototype">
		<property name="serviceInterface" value="ch.hotstuff.beowulf.services.HelloWorld" />
		<property name="serviceName" value="HelloWorld" />
		<property name="endpointAddress" value="http://localhost:8443/webservice/HelloWorld" />
	</bean>
	
	<!-- This bean simply wraps the JaxWsPortProxyFactoryBean but adds a factory method to get a
		single port. It is not possible to get a port directly via CommonsPoolTargetSource. 
		
		This is now obsolete, since we can use the ampersand to refer to the factory bean
		instance in the spring config, see below.
	-->
	<!-- 
 	<bean id="helloService_portWrapper" class="ch.hotstuff.beowulf.wsclient.spring.JaxWsPortProxyFactoryWrapper">
		<property name="serviceInterface" value="ch.hotstuff.beowulf.services.HelloWorld" />
		<property name="serviceName" value="HelloWorld" />
		<property name="endpointAddress" value="http://localhost:8443/webservice/HelloWorld" />
	</bean>
	-->

	<!-- The CommonsPoolTargetSource doesn't know that it can call getObject on the proxyfactory.
	     Therefore we need to have this workaround. -->
	<bean id="helloService_portProxy" scope="prototype" 
		factory-bean="&amp;helloService_portProxyFactory" factory-method="getObject" />

	<bean id="helloService_portPool" class="org.springframework.aop.target.CommonsPoolTargetSource">
		<!-- <property name="targetBeanName" value="helloService_portProxy" /> -->
		<property name="targetBeanName" value="helloService_portProxy" />
		<property name="maxSize" value="-1" />
		<property name="maxIdle" value="-1" />
	</bean>
	
	<bean id="helloService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource" ref="helloService_portPool" />
		<property name="proxyInterfaces" value="ch.hotstuff.beowulf.services.HelloWorld"/>
	</bean>
	
</beans>
