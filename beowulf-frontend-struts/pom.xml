<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>ch.hotstuff</groupId>
		<artifactId>beowulf-masterbuild</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../beowulf-masterbuild/pom.xml</relativePath>
	</parent>
	<artifactId>beowulf-frontend-struts</artifactId>
	<packaging>war</packaging>

	<properties>
		<server.port>8080</server.port>
		<webapp.path>/beowulf-frontend</webapp.path>
		<ping.test.path>/Welcome.do</ping.test.path>
		<webservice.port>${server.port}</webservice.port>
		<webservice.path>/webservice</webservice.path>
	</properties>

	<name>beowulf-frontend-struts Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<dependencies>
		<!-- Beowulf components -->
		<dependency>
			<groupId>ch.hotstuff</groupId>
			<artifactId>beowulf-business-svc</artifactId>
		</dependency>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-struts</artifactId>
		</dependency>

		<!-- Struts -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts-taglib</artifactId>
		</dependency>

        <!-- Need to mark this as provided so that it is not pulled in by the
             cxf dependencies -->
		<!-- CXF to access web service -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- To use servlet related classes -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Logging and testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>beowulf-frontend-struts</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- This plugin finds free ports and binds them to the specified portNames -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>reserve-network-port</id>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<phase>process-test-resources</phase>
						<configuration>
							<portNames>
								<portName>test.server.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Tomcat plugin for embedded webapp container -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- This says: Run the "run-war" goal of the tomcat plugin in the 
							build phase "pre-integration-test". -->
						<id>start-tomcat</id>
						<goals>
							<goal>run-war</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<port>${test.server.port}</port>
							<path>${webapp.path}</path>
							<fork>true</fork>
							<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
					        <systemProperties>
					            <webserviceEndpoint>http://localhost:${test.server.port}${webservice.path}</webserviceEndpoint>
					        </systemProperties>
          				</configuration>
					</execution>
					<execution>
						<!-- This says: Run the "shutdown" goal of the tomcat plugin in the 
							build phase "post-integration-test". -->
						<id>stop-tomcat</id>
						<goals>
							<goal>shutdown</goal>
						</goals>
						<phase>post-integration-test</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<webapp.url>http://localhost:${test.server.port}${webapp.path}${ping.test.path}</webapp.url>
								<db.url>jdbc://to.be.defined</db.url>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>1.1</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<port>${server.port}</port>
								<path>${webapp.path}</path>
								<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
						        <systemProperties>
						            <webserviceEndpoint>http://localhost:${server.port}${webservice.path}</webserviceEndpoint>
						        </systemProperties>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>
												reserve-network-port
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
